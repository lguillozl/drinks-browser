{"version":3,"sources":["context/CategoriasContext.jsx","context/RecetasContext.jsx","components/Formulario.jsx","components/Header.jsx","context/ModalContext.jsx","components/Receta.jsx","components/ListaRecetas.jsx","App.js","reportWebVitals.js","index.js"],"names":["CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","resultado","obtenerRecetas","Formulario","guardarBusqueda","useContext","obtenerDatosReceta","e","target","name","className","onSubmit","preventDefault","type","placeholder","onChange","map","strCategory","Header","ModalConext","ModalProvider","idReceta","guardarIdReceta","informacion","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","breakpoints","down","width","up","palette","background","shadows","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee723ed4.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n// Crear el Context\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider es donde se encuentran las funciones y state\r\nconst CategoriasProvider = (props) => {\r\n\r\n    // Crear el state del context\r\n    const [categorias, guardarCategorias] = useState([]);\r\n    // Ejecutar el llamado a la api\r\n    useEffect(() => {\r\n        const obtenerCategorias = async () => {\r\n            const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\r\n\r\n            const categorias = await axios.get(url);\r\n            guardarCategorias(categorias.data.drinks);\r\n        }\r\n        obtenerCategorias();\r\n    }, [])\r\n    return (\r\n        <CategoriasContext.Provider\r\n            value={{\r\n                categorias\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CategoriasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CategoriasProvider;","import React, {createContext, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n\r\n    const [recetas, guardarRecetas] = useState([]);\r\n    const [busqueda, buscarRecetas] = useState({\r\n        nombre: '',\r\n        categoria: '',\r\n    });\r\n\r\n    const [consultar, guardarConsultar] = useState(false);\r\n\r\n    const {nombre, categoria} = busqueda;\r\n\r\n    useEffect(() => {\r\n        if(consultar){\r\n            const obtenerRecetas = async () => {\r\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\r\n\r\n                const resultado = await axios.get(url);\r\n\r\n                guardarRecetas(resultado.data.drinks);\r\n            }\r\n            obtenerRecetas();\r\n        }\r\n    }, [busqueda]);\r\n\r\n    return ( \r\n        <RecetasContext.Provider\r\n            value={{\r\n                recetas,\r\n                buscarRecetas,\r\n                guardarConsultar\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n     );\r\n}\r\n \r\nexport default RecetasProvider;","import React, {useContext, useState} from 'react';\r\nimport {CategoriasContext} from '../context/CategoriasContext';\r\nimport {RecetasContext} from '../context/RecetasContext';\r\n\r\nconst Formulario = () => {\r\n\r\n    const [busqueda, guardarBusqueda] = useState({\r\n        nombre: '',\r\n        categoria: '',\r\n    })\r\n\r\n    const {categorias} = useContext(CategoriasContext);\r\n    const {buscarRecetas, guardarConsultar} = useContext(RecetasContext);\r\n\r\n    // Funcion para leer los contenidos\r\n    const obtenerDatosReceta = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            className=\"col-12\"\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                buscarRecetas(busqueda);\r\n                guardarConsultar(true);\r\n            }}\r\n        >\r\n            <fieldset className=\"text-center\">\r\n                <legend>Buscar bebidas por Categoría o Ingrediente</legend>\r\n            </fieldset>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    <input\r\n                        name=\"nombre\"\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Buscar por Ingrediente\"\r\n                        onChange={obtenerDatosReceta}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name=\"categoria\"\r\n                        onChange={obtenerDatosReceta}\r\n                    >\r\n                        <option value=\"\">-- Selecciona Categoría --</option>\r\n                        {categorias.map(categoria => (\r\n                            <option \r\n                                key={categoria.strCategory}\r\n                                value={categoria.strCategory}\r\n                            >{categoria.strCategory}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        value=\"Buscar Bebidas\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className=\"bg-alert\">\r\n            <h1>Busca Recetas de Bebidas</h1>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, {createContext, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n// Crear el context\r\nexport const ModalConext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n\r\n    // State del provider\r\n    const [idReceta, guardarIdReceta] = useState(null);\r\n    const [informacion, guardarReceta] = useState({});\r\n\r\n    // Una vez que tenemos una receta, llamar la api\r\n    useEffect(() => {\r\n        const obtenerReceta = async () => {\r\n            if(!idReceta) return;\r\n\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idReceta}`;\r\n\r\n            const resultado = await axios.get(url);\r\n\r\n            guardarReceta(resultado.data.drinks[0]);\r\n        }\r\n        obtenerReceta();\r\n    }, [idReceta])\r\n\r\n    return (\r\n        <ModalConext.Provider\r\n            value={{\r\n                informacion,\r\n                guardarIdReceta,\r\n                guardarReceta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ModalConext.Provider>\r\n    );\r\n}\r\n\r\nexport default ModalProvider;","import React, {useContext, useState} from 'react';\r\nimport {ModalConext} from '../context/ModalContext';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      [theme.breakpoints.down('sm')]: {\r\n          width: '100%',\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n          width:450,\r\n      },\r\n      maxHeight: 500,\r\n      overflowY: 'auto',\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst Receta = ({receta}) => {\r\n\r\n    // Configuracion del modal de material-ui\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    // Extraer los valores del context\r\n    const {informacion, guardarIdReceta, guardarReceta} = useContext(ModalConext);\r\n\r\n    // Muestra y formatea los ingredientes\r\n    const mostrarIngredientes = informacion => {\r\n        let ingredientes = [];\r\n        for(let i = 1; i< 16; i++){\r\n            if(informacion[`strIngredient${i}`]){\r\n                ingredientes.push(\r\n                    <li>{informacion[`strIngredient${i}`]}{informacion[`strMeasure${i}`]}</li>\r\n                )\r\n            }\r\n        }\r\n        return ingredientes;\r\n    }\r\n\r\n    return ( \r\n        <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n\r\n                <img className=\"card-img-top\" src={receta.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`}/>\r\n\r\n                <div className=\"card-body\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        onClick={() => {\r\n                            guardarIdReceta(receta.idDrink)\r\n                            handleOpen();\r\n                        }}\r\n                    >\r\n                        Ver Receta\r\n                    </button>\r\n\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={() => {\r\n                            guardarIdReceta(null);\r\n                            guardarReceta({});\r\n                            handleClose();\r\n                        }}\r\n                    >\r\n                        <div style={modalStyle} className={classes.paper}>\r\n                            <h2>{informacion.strDrink}</h2>\r\n                            <h3 className=\"mt-4\">Instrucciones</h3>\r\n                            <p>{informacion.strInstructions}</p>\r\n                            <img className=\"img-fluid my-4\" src={informacion.strDrinkThumb} />\r\n\r\n                            <h3>Ingredientes y cantidades</h3>\r\n                            <ul>\r\n                                {mostrarIngredientes(informacion)}\r\n                            </ul>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Receta;","import React, {useContext} from 'react';\r\nimport {RecetasContext} from '../context/RecetasContext';\r\nimport Receta from '../components/Receta';\r\n\r\nconst ListaRecetas = () => {\r\n\r\n    // Extraer las recetas\r\n    const {recetas} = useContext(RecetasContext);\r\n    console.log(recetas);\r\n    return ( \r\n        <div className=\"row mt-5\">\r\n            {recetas.map(receta => (\r\n                <Receta \r\n                   key={receta.idDrink}\r\n                   receta={receta} \r\n                />\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ListaRecetas;","import React from 'react';\n\nimport Formulario from './components/Formulario';\nimport Header from './components/Header';\nimport ListaRecetas from './components/ListaRecetas';\n\nimport CategoriasProvider from './context/CategoriasContext';\nimport RecetasProvider from './context/RecetasContext';\nimport ModalProvider from './context/ModalContext';\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Header/>\n            <div className=\"container mt-5\">\n              <div className=\"row\">\n                <Formulario/>\n              </div>\n\n              <ListaRecetas/>\n            </div>\n        </ModalProvider>\n      </RecetasProvider>      \n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}